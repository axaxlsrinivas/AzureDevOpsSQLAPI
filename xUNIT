using Xunit;
using Microsoft.Maui.Controls;
using MyApp;

public class MyContentViewTests
{
    [Fact]
    public void TextProperty_Should_Set_Label_Text()
    {
        // Arrange
        var contentView = new MyContentView();
        var expectedText = "Hello, World!";
        
        // Act
        contentView.TextProperty = expectedText;
        
        // Assert
        var label = (Label)contentView.Content;
        Assert.Equal(expectedText, label.Text);
    }
}


using Xunit;
using Microsoft.Maui.Controls;
using MyApp;

public class MyContentViewTests
{
    [Fact]
    public void BackgroundColorProperty_Should_Set_BoxView_Color()
    {
        // Arrange
        var contentView = new MyContentView();
        var expectedColor = Colors.Red; // Use appropriate Color instance
        
        // Act
        contentView.BackgroundColorProperty = expectedColor;
        
        // Assert
        var boxView = (BoxView)contentView.Content;
        Assert.Equal(expectedColor, boxView.Color);
    }
}


using Xunit;
using Microsoft.Maui.Controls;
using MyApp;

public class MyContentViewTests
{
    [Fact]
    public void ImageSourceProperty_Should_Set_Image_Source()
    {
        // Arrange
        var contentView = new MyContentView();
        var expectedImageSource = ImageSource.FromFile("example.png");
        
        // Act
        contentView.ImageSourceProperty = expectedImageSource;
        
        // Assert
        var image = (Image)contentView.Content;
        Assert.Equal(expectedImageSource, image.Source);
    }
}


======


using Xunit;
using Microsoft.Maui.Controls;

public class LabelStyleTests
{
    public LabelStyleTests()
    {
        // Initialize the application and its resources
        var app = new Application();
        Application.Current = app;

        // Add the necessary resources
        app.Resources = new ResourceDictionary
        {
            {
                "TestLabelStyle", new Style(typeof(Label))
                {
                    Setters =
                    {
                        new Setter { Property = Label.TextColorProperty, Value = Colors.Red },
                        new Setter { Property = Label.FontSizeProperty, Value = 24 }
                    }
                }
            }
        };
    }

    [Fact]
    public void Label_ShouldApplyTestLabelStyle()
    {
        // Arrange
        var label = new Label();
        label.Style = (Style)Application.Current.Resources["TestLabelStyle"];

        // Act & Assert
        Assert.Equal(Colors.Red, label.TextColor);
        Assert.Equal(24, label.FontSize);
    }

    [Fact]
    public void Label_ShouldApplyTestLabelStyle_UsingDynamicResource()
    {
        // Arrange
        var label = new Label();
        label.SetDynamicResource(Label.StyleProperty, "TestLabelStyle");

        // Act & Assert
        Assert.Equal(Colors.Red, label.TextColor);
        Assert.Equal(24, label.FontSize);
    }
}

