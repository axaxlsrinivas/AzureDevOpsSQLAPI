using Microsoft.Maui.Controls;
using Microsoft.Maui.Controls.Platform;

namespace YourAppName
{
    public class CustomWebViewHandler : WebViewHandler
    {
        protected override IWebView CreateNativeWebView()
        {
            // Return platform-specific implementation of NativeWebView
            return new NativeWebView(Context);
        }

        protected override void UpdateSource()
        {
            if (Element.Source is UrlWebViewSource urlSource && Control is NativeWebView nativeWebView)
            {
                string url = urlSource.Url;

                // Check if the URL is a PDF file
                if (IsPdfUrl(url))
                {
                    // Load PDF using platform-specific implementation
                    LoadPdf(url, nativeWebView);
                }
                else
                {
                    // Load other URLs (e.g., HTML pages) using base class method
                    base.UpdateSource();
                }
            }
        }

        private bool IsPdfUrl(string url)
        {
            return url.ToLower().EndsWith(".pdf");
        }

        private void LoadPdf(string pdfUrl, NativeWebView webView)
        {
            // Platform-specific handling for loading PDF
            webView.LoadPdf(pdfUrl);
        }
    }
}
 ========
using Android.Content;
using Android.Webkit;

namespace YourAppName.Android
{
    public class NativeWebView : WebView
    {
        public NativeWebView(Context context) : base(context)
        {
            // Additional initialization if needed
        }

        public void LoadPdf(string pdfUrl)
        {
            LoadUrl($"https://docs.google.com/gview?embedded=true&url={pdfUrl}");
        }
    }
}
=========
using UIKit;
using Foundation;
using WebKit;

namespace YourAppName.iOS
{
    public class NativeWebView : WKWebView
    {
        public NativeWebView(CGRect frame, WKWebViewConfiguration config) : base(frame, config)
        {
            // Additional initialization if needed
        }

        public void LoadPdf(string pdfUrl)
        {
            var request = new NSUrlRequest(new NSUrl(pdfUrl));
            LoadRequest(request);
        }
    }
}
=======
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:YourAppName"
             x:Class="YourAppName.MainPage">

    <WebView Source="https://example.com/document.pdf"
             Handler="{StaticResource CustomWebViewHandler}" />

</ContentPage>
