// CustomWebView.cs
using Microsoft.Maui.Controls;

public class CustomWebView : WebView
{
}

// Platforms/Android/CustomWebViewHandler.cs (for Android)
using Android.Webkit;
using Microsoft.Maui.Handlers;

namespace YourNamespace.Platforms.Android
{
    public class CustomWebViewHandler : WebViewHandler
    {
        protected override void ConnectHandler(WebView platformView)
        {
            base.ConnectHandler(platformView);
            platformView.SetWebViewClient(new CustomWebViewClient());
        }
    }

    public class CustomWebViewClient : WebViewClient
    {
        public override bool ShouldOverrideUrlLoading(WebView view, IWebResourceRequest request)
        {
            view.LoadUrl(request.Url.ToString());
            return true;
        }
    }
}

// Platforms/iOS/CustomWebViewHandler.cs (for iOS)
using Foundation;
using Microsoft.Maui.Handlers;
using WebKit;

namespace YourNamespace.Platforms.iOS
{
    public class CustomWebViewHandler : WebViewHandler
    {
        protected override void ConnectHandler(WKWebView platformView)
        {
            base.ConnectHandler(platformView);
            platformView.NavigationDelegate = new CustomWebViewNavigationDelegate();
        }
    }

    public class CustomWebViewNavigationDelegate : WKNavigationDelegate
    {
        public override void DecidePolicy(WKWebView webView, WKNavigationAction navigationAction, Action<WKNavigationActionPolicy> decisionHandler)
        {
            decisionHandler(WKNavigationActionPolicy.Allow);
        }
    }
}

// MauiProgram.cs
using Microsoft.Maui.Controls.Hosting;
using Microsoft.Maui.Hosting;
using YourNamespace.Platforms.Android;
using YourNamespace.Platforms.iOS;

public static class MauiProgram
{
    public static MauiApp CreateMauiApp()
    {
        var builder = MauiApp.CreateBuilder();
        builder
            .UseMauiApp<App>()
            .ConfigureMauiHandlers(handlers =>
            {
                #if ANDROID
                handlers.AddHandler(typeof(CustomWebView), typeof(CustomWebViewHandler));
                #elif IOS
                handlers.AddHandler(typeof(CustomWebView), typeof(CustomWebViewHandler));
                #endif
            });

        return builder.Build();
    }
}

<!-- MainPage.xaml -->
<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:YourNamespace"
             x:Class="YourNamespace.MainPage">

    <local:CustomWebView Source="https://www.example.com/yourpdf.pdf" />
</ContentPage>
